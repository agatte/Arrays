#ifndef _DynamicArrays_H#define _DynamicArrays_H/*------------------------------------------------------------The dynamic arrays (ArrayLists) container class.Anthony Gatte-------------------------------------------------------------*/class DynamicArrays { public:  /* Constructors/Destructors */  // This constructor initializes the array container to  // be initially empty.  The bag is constructed to contain 42 slots  // if no user value is specified.  DynamicArrays (int initArraySize = 42);  // The destructor deletes the dyanmically allocated array.  ~DynamicArrays ();// Adds an item to the Queue (back of the line)// Precondition: Queue cannot be full// Postcondition: Item is added to the Queue (back of line)void Enqueue (int item);// Removes and returns oldest item from queue (the first in line)// Precondition: Queue cannot be empty// Postcondition: The oldest item (first in line) is returned and removedint Dequeue ();// Returns the oldest item in the queue (first in line)// Precondition: Queue cannot be empty// Postcondition: Oldest item (first in line) is returnedint Next ();// Returns how many items are in the queue// Precondition: Must be some number of elements in the queue// Postcondition: Amount of elements is returnedint Size ();// Gets rid of all the items in the queue// Precondition: Must have some number of elements other wise getting rid of no elements// Postcondition: Gets rid of all the elements in the queuevoid Clear (); private:  /* Instance variables */  int next;  int back;};#endif